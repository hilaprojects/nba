// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.1
// source: player_game.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerGameStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        int32                  `protobuf:"varint,1,opt,name=points,proto3" json:"points,omitempty"`
	Rebounds      int32                  `protobuf:"varint,2,opt,name=rebounds,proto3" json:"rebounds,omitempty"`
	Assists       int32                  `protobuf:"varint,3,opt,name=assists,proto3" json:"assists,omitempty"`
	Steals        int32                  `protobuf:"varint,4,opt,name=steals,proto3" json:"steals,omitempty"`
	Blocks        int32                  `protobuf:"varint,5,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Fouls         int32                  `protobuf:"varint,6,opt,name=fouls,proto3" json:"fouls,omitempty"`
	Turnovers     int32                  `protobuf:"varint,7,opt,name=turnovers,proto3" json:"turnovers,omitempty"`
	MinutesPlayed float32                `protobuf:"fixed32,8,opt,name=minutes_played,json=minutesPlayed,proto3" json:"minutes_played,omitempty"`
	PlayerId      int32                  `protobuf:"varint,9,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerGameStat) Reset() {
	*x = PlayerGameStat{}
	mi := &file_player_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerGameStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGameStat) ProtoMessage() {}

func (x *PlayerGameStat) ProtoReflect() protoreflect.Message {
	mi := &file_player_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGameStat.ProtoReflect.Descriptor instead.
func (*PlayerGameStat) Descriptor() ([]byte, []int) {
	return file_player_game_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerGameStat) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *PlayerGameStat) GetRebounds() int32 {
	if x != nil {
		return x.Rebounds
	}
	return 0
}

func (x *PlayerGameStat) GetAssists() int32 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *PlayerGameStat) GetSteals() int32 {
	if x != nil {
		return x.Steals
	}
	return 0
}

func (x *PlayerGameStat) GetBlocks() int32 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *PlayerGameStat) GetFouls() int32 {
	if x != nil {
		return x.Fouls
	}
	return 0
}

func (x *PlayerGameStat) GetTurnovers() int32 {
	if x != nil {
		return x.Turnovers
	}
	return 0
}

func (x *PlayerGameStat) GetMinutesPlayed() float32 {
	if x != nil {
		return x.MinutesPlayed
	}
	return 0
}

func (x *PlayerGameStat) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type LogGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogGameResponse) Reset() {
	*x = LogGameResponse{}
	mi := &file_player_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogGameResponse) ProtoMessage() {}

func (x *LogGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogGameResponse.ProtoReflect.Descriptor instead.
func (*LogGameResponse) Descriptor() ([]byte, []int) {
	return file_player_game_proto_rawDescGZIP(), []int{1}
}

func (x *LogGameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogGameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LogPlayerGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	GameId        int32                  `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Points        int32                  `protobuf:"varint,3,opt,name=points,proto3" json:"points,omitempty"`
	Rebounds      int32                  `protobuf:"varint,4,opt,name=rebounds,proto3" json:"rebounds,omitempty"`
	Assists       int32                  `protobuf:"varint,5,opt,name=assists,proto3" json:"assists,omitempty"`
	Steals        int32                  `protobuf:"varint,6,opt,name=steals,proto3" json:"steals,omitempty"`
	Blocks        int32                  `protobuf:"varint,7,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Fouls         int32                  `protobuf:"varint,8,opt,name=fouls,proto3" json:"fouls,omitempty"`
	Turnovers     int32                  `protobuf:"varint,9,opt,name=turnovers,proto3" json:"turnovers,omitempty"`
	MinutesPlayed float32                `protobuf:"fixed32,10,opt,name=minutes_played,json=minutesPlayed,proto3" json:"minutes_played,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogPlayerGameRequest) Reset() {
	*x = LogPlayerGameRequest{}
	mi := &file_player_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogPlayerGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogPlayerGameRequest) ProtoMessage() {}

func (x *LogPlayerGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogPlayerGameRequest.ProtoReflect.Descriptor instead.
func (*LogPlayerGameRequest) Descriptor() ([]byte, []int) {
	return file_player_game_proto_rawDescGZIP(), []int{2}
}

func (x *LogPlayerGameRequest) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *LogPlayerGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *LogPlayerGameRequest) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *LogPlayerGameRequest) GetRebounds() int32 {
	if x != nil {
		return x.Rebounds
	}
	return 0
}

func (x *LogPlayerGameRequest) GetAssists() int32 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *LogPlayerGameRequest) GetSteals() int32 {
	if x != nil {
		return x.Steals
	}
	return 0
}

func (x *LogPlayerGameRequest) GetBlocks() int32 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *LogPlayerGameRequest) GetFouls() int32 {
	if x != nil {
		return x.Fouls
	}
	return 0
}

func (x *LogPlayerGameRequest) GetTurnovers() int32 {
	if x != nil {
		return x.Turnovers
	}
	return 0
}

func (x *LogPlayerGameRequest) GetMinutesPlayed() float32 {
	if x != nil {
		return x.MinutesPlayed
	}
	return 0
}

// Request structure for GetPlayerGameStats
type GetPlayersGameStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNumber    int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"` // The page number to fetch
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // The number of records per page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayersGameStatsRequest) Reset() {
	*x = GetPlayersGameStatsRequest{}
	mi := &file_player_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayersGameStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayersGameStatsRequest) ProtoMessage() {}

func (x *GetPlayersGameStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayersGameStatsRequest.ProtoReflect.Descriptor instead.
func (*GetPlayersGameStatsRequest) Descriptor() ([]byte, []int) {
	return file_player_game_proto_rawDescGZIP(), []int{3}
}

func (x *GetPlayersGameStatsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetPlayersGameStatsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Response structure for GetPlayerGameStats
type PlayersGameStatsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlayerGameStats []*PlayerGameStat      `protobuf:"bytes,1,rep,name=player_game_stats,json=playerGameStats,proto3" json:"player_game_stats,omitempty"` // List of PlayerGameStat objects
	TotalCount      int64                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`                 // Total count of records
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PlayersGameStatsResponse) Reset() {
	*x = PlayersGameStatsResponse{}
	mi := &file_player_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayersGameStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayersGameStatsResponse) ProtoMessage() {}

func (x *PlayersGameStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayersGameStatsResponse.ProtoReflect.Descriptor instead.
func (*PlayersGameStatsResponse) Descriptor() ([]byte, []int) {
	return file_player_game_proto_rawDescGZIP(), []int{4}
}

func (x *PlayersGameStatsResponse) GetPlayerGameStats() []*PlayerGameStat {
	if x != nil {
		return x.PlayerGameStats
	}
	return nil
}

func (x *PlayersGameStatsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type TeamSeasonStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        int32                  `protobuf:"varint,1,opt,name=points,proto3" json:"points,omitempty"`
	Rebounds      int32                  `protobuf:"varint,2,opt,name=rebounds,proto3" json:"rebounds,omitempty"`
	Assists       int32                  `protobuf:"varint,3,opt,name=assists,proto3" json:"assists,omitempty"`
	Steals        int32                  `protobuf:"varint,4,opt,name=steals,proto3" json:"steals,omitempty"`
	Blocks        int32                  `protobuf:"varint,5,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Fouls         int32                  `protobuf:"varint,6,opt,name=fouls,proto3" json:"fouls,omitempty"`
	Turnovers     int32                  `protobuf:"varint,7,opt,name=turnovers,proto3" json:"turnovers,omitempty"`
	MinutesPlayed float32                `protobuf:"fixed32,8,opt,name=minutes_played,json=minutesPlayed,proto3" json:"minutes_played,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamSeasonStats) Reset() {
	*x = TeamSeasonStats{}
	mi := &file_player_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamSeasonStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamSeasonStats) ProtoMessage() {}

func (x *TeamSeasonStats) ProtoReflect() protoreflect.Message {
	mi := &file_player_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamSeasonStats.ProtoReflect.Descriptor instead.
func (*TeamSeasonStats) Descriptor() ([]byte, []int) {
	return file_player_game_proto_rawDescGZIP(), []int{5}
}

func (x *TeamSeasonStats) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *TeamSeasonStats) GetRebounds() int32 {
	if x != nil {
		return x.Rebounds
	}
	return 0
}

func (x *TeamSeasonStats) GetAssists() int32 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *TeamSeasonStats) GetSteals() int32 {
	if x != nil {
		return x.Steals
	}
	return 0
}

func (x *TeamSeasonStats) GetBlocks() int32 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *TeamSeasonStats) GetFouls() int32 {
	if x != nil {
		return x.Fouls
	}
	return 0
}

func (x *TeamSeasonStats) GetTurnovers() int32 {
	if x != nil {
		return x.Turnovers
	}
	return 0
}

func (x *TeamSeasonStats) GetMinutesPlayed() float32 {
	if x != nil {
		return x.MinutesPlayed
	}
	return 0
}

type GetTeamsSeasonStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNumber    int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"` // The page number to fetch
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // The number of records per page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTeamsSeasonStatsRequest) Reset() {
	*x = GetTeamsSeasonStatsRequest{}
	mi := &file_player_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeamsSeasonStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamsSeasonStatsRequest) ProtoMessage() {}

func (x *GetTeamsSeasonStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamsSeasonStatsRequest.ProtoReflect.Descriptor instead.
func (*GetTeamsSeasonStatsRequest) Descriptor() ([]byte, []int) {
	return file_player_game_proto_rawDescGZIP(), []int{6}
}

func (x *GetTeamsSeasonStatsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetTeamsSeasonStatsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type TeamsSeasonStatsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TeamSeasonStats []*TeamSeasonStats     `protobuf:"bytes,1,rep,name=team_season_stats,json=teamSeasonStats,proto3" json:"team_season_stats,omitempty"` // List of TeamSeasonStats objects
	TotalCount      int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`                 // Total count of records
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TeamsSeasonStatsResponse) Reset() {
	*x = TeamsSeasonStatsResponse{}
	mi := &file_player_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsSeasonStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsSeasonStatsResponse) ProtoMessage() {}

func (x *TeamsSeasonStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsSeasonStatsResponse.ProtoReflect.Descriptor instead.
func (*TeamsSeasonStatsResponse) Descriptor() ([]byte, []int) {
	return file_player_game_proto_rawDescGZIP(), []int{7}
}

func (x *TeamsSeasonStatsResponse) GetTeamSeasonStats() []*TeamSeasonStats {
	if x != nil {
		return x.TeamSeasonStats
	}
	return nil
}

func (x *TeamsSeasonStatsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_player_game_proto protoreflect.FileDescriptor

var file_player_game_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x86, 0x02, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x65, 0x61,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6c,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6c, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x45, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa5, 0x02, 0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6c, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x75,
	0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x22,
	0x5a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7b, 0x0a, 0x18, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xea, 0x01, 0x0a, 0x0f, 0x54, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x65, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x65, 0x61,
	0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f,
	0x75, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6c, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x64, 0x22, 0x5a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x73, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x7c, 0x0a, 0x18, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x11, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0f, 0x74,
	0x65, 0x61, 0x6d, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32,
	0xfc, 0x01, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_player_game_proto_rawDescOnce sync.Once
	file_player_game_proto_rawDescData = file_player_game_proto_rawDesc
)

func file_player_game_proto_rawDescGZIP() []byte {
	file_player_game_proto_rawDescOnce.Do(func() {
		file_player_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_player_game_proto_rawDescData)
	})
	return file_player_game_proto_rawDescData
}

var file_player_game_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_player_game_proto_goTypes = []any{
	(*PlayerGameStat)(nil),             // 0: pb.PlayerGameStat
	(*LogGameResponse)(nil),            // 1: pb.LogGameResponse
	(*LogPlayerGameRequest)(nil),       // 2: pb.LogPlayerGameRequest
	(*GetPlayersGameStatsRequest)(nil), // 3: pb.GetPlayersGameStatsRequest
	(*PlayersGameStatsResponse)(nil),   // 4: pb.PlayersGameStatsResponse
	(*TeamSeasonStats)(nil),            // 5: pb.TeamSeasonStats
	(*GetTeamsSeasonStatsRequest)(nil), // 6: pb.GetTeamsSeasonStatsRequest
	(*TeamsSeasonStatsResponse)(nil),   // 7: pb.TeamsSeasonStatsResponse
}
var file_player_game_proto_depIdxs = []int32{
	0, // 0: pb.PlayersGameStatsResponse.player_game_stats:type_name -> pb.PlayerGameStat
	5, // 1: pb.TeamsSeasonStatsResponse.team_season_stats:type_name -> pb.TeamSeasonStats
	2, // 2: pb.PlayerGameService.LogPlayerGame:input_type -> pb.LogPlayerGameRequest
	3, // 3: pb.PlayerGameService.GetPlayersGameStats:input_type -> pb.GetPlayersGameStatsRequest
	6, // 4: pb.PlayerGameService.GetTeamSeasonStats:input_type -> pb.GetTeamsSeasonStatsRequest
	1, // 5: pb.PlayerGameService.LogPlayerGame:output_type -> pb.LogGameResponse
	4, // 6: pb.PlayerGameService.GetPlayersGameStats:output_type -> pb.PlayersGameStatsResponse
	7, // 7: pb.PlayerGameService.GetTeamSeasonStats:output_type -> pb.TeamsSeasonStatsResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_player_game_proto_init() }
func file_player_game_proto_init() {
	if File_player_game_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_player_game_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_player_game_proto_goTypes,
		DependencyIndexes: file_player_game_proto_depIdxs,
		MessageInfos:      file_player_game_proto_msgTypes,
	}.Build()
	File_player_game_proto = out.File
	file_player_game_proto_rawDesc = nil
	file_player_game_proto_goTypes = nil
	file_player_game_proto_depIdxs = nil
}
